import mongoose from 'mongoose';
import dotenv from 'dotenv';
import Room from '../src/models/Room.js';

dotenv.config({ path: '.env' });

const sampleRooms = [
  {
    name: 'Sala de Reuni√µes Principal',
    description: 'Espa√ßo amplo e moderno, ideal para reuni√µes de equipe e apresenta√ß√µes importantes.',
    capacity: 12,
    resources: ['WiFi', 'Projetor', 'Quadro Branco', 'Videoconfer√™ncia'],
    image: '/images/rooms/sala_reunioes_principal.png',
    isActive: true,
    location: 'Piso 1',
  },
  {
    name: 'Sala de Brainstorming',
    description: 'Ambiente criativo e inspirador, perfeito para sess√µes de idea√ß√£o e trabalho colaborativo.',
    capacity: 8,
    resources: ['WiFi', 'Quadro Branco', 'Post-its', 'Caf√©'],
    image: '/images/rooms/sala_brainstorming.png',
    isActive: true,
    location: 'Piso 2',
  },
  {
    name: 'Sala de Confer√™ncias',
    description: 'Sala executiva para reuni√µes formais e videoconfer√™ncias com clientes.',
    capacity: 20,
    resources: ['WiFi', 'Projetor', 'Sistema de Som', 'Videoconfer√™ncia', 'Caf√©'],
    image: '/images/rooms/sala_conferencias.png',
    isActive: true,
    location: 'Piso 3',
  },
  {
    name: 'Sala de Trabalho Colaborativo',
    description: 'Espa√ßo flex√≠vel para trabalho em equipe e workshops.',
    capacity: 15,
    resources: ['WiFi', 'Quadro Branco', 'Mesas Modulares'],
    image: '/images/rooms/sala_trabalho_colaborativo.png',
    isActive: true,
    location: 'Piso 2',
  },
  {
    name: 'Sala Privada',
    description: 'Pequeno espa√ßo reservado para reuni√µes individuais ou chamadas privadas.',
    capacity: 4,
    resources: ['WiFi', 'Monitor'],
    image: '/images/rooms/sala_privada.png',
    isActive: true,
    location: 'Piso 1',
  },
  {
    name: 'Audit√≥rio',
    description: 'Grande espa√ßo para eventos, palestras e apresenta√ß√µes para audi√™ncias maiores.',
    capacity: 50,
    resources: ['WiFi', 'Projetor', 'Sistema de Som', 'Microfones', 'Palco'],
    image: '/images/rooms/auditorio.png',
    isActive: true,
    location: 'Piso T√©rreo',
  },
];

async function seedDatabase() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Conectado ao MongoDB');

    await Room.deleteMany({});
    console.log('üóëÔ∏è  Salas antigas removidas');

    await Room.insertMany(sampleRooms);
    console.log(`‚úÖ ${sampleRooms.length} salas adicionadas com sucesso!`);

    await mongoose.connection.close();
    console.log('üëã Conex√£o fechada');
  } catch (error) {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  }
}

seedDatabase();